snippet im "import ***"
import ${1:moduleName}$0
endsnippet

snippet from "from *** import **"
from ${1:moduleName} import ${2:className}$0
endsnippet

snippet init
def __init__(self${1:,${2:args}}):
	${2:code}
endsnippet

snippet _str
def __str__(self):
	$0
endsnippet

snippet func "func(visual)"
${1:functionName}(${VISUAL})$0
endsnippet

snippet namemain
if __name__ == '__main__':
	$0
endsnippet

snippet cl "class"
class ${1:className}:
	"""${2:docString}"""
	def __init__(self,${3:args}):
		${4:pass}
endsnippet

snippet for "cycle"
for ${1:item} in ${2:collection}:
	${3:Do This}
endsnippet

snippet p "print(x)"
print(${VISUAL}$1)$0
endsnippet

snippet fmt ".format()" i
.format($0)
endsnippet

snippet .ap ".append()" i
.append($1)$0
endsnippet

snippet len "len()" i
len($1)$0
endsnippet

snippet doc
"""$1"""$0
endsnippet

snippet try "try except block"
try:
	${VISUAL}
except $1:
	$0	
endsnippet

snippet r "return"
return $0
endsnippet

snippet nn "None"
None $0
endsnippet
